df = full_data %>%
select(Q2.2, Q2.1) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
count(faculty, gender) %>%
rename("Teilnehmende" = n) %>%
left_join(df_faculty_affected) %>%
rename("Betroffene" = n) %>%
filter(faculty != "keine Angabe") %>%
left_join(df_all_students_gender) %>%
mutate("Teilnehmende in % Studierende" = 100*Teilnehmende/ Studierende,
"Betroffene in % Teilnehmende" = 100*Betroffene/ Teilnehmende,
"Betroffene in % Studierende" = 100*Betroffene/ Studierende)
df_mean = df %>%
group_by(gender) %>%
summarize_at(c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende"), ~ mean(.x, na.rm = TRUE)) %>%
melt(id.vars = "gender", value.name = "mean")
df = df %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty)  %>%
select(gender, c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende")) %>%
melt(id.vars = "gender", value.name = "selected") %>%
left_join(df_mean) %>%
mutate(direction = (case_when(mean < selected ~ "überdurchschnittlich",
mean > selected ~ "unterdurchschnittlich",
mean == selected ~ "durchschnittlich")))
df$gender = factor(df$gender, levels = c("weiblich", "andere"))
df$variable = factor(df$variable, levels = c("Betroffene in % Studierende", "Betroffene in % Teilnehmende", "Teilnehmende in % Studierende"))
(p1 = ggplot(data = df) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_link(alpha = .5, color = soft_blue, show.legend = FALSE,
aes(x = variable, xend = variable, y = mean, yend = selected, colour = gender, size = after_stat(index))) +
geom_point(size = 6,
aes(y = selected, x = variable, color = gender, shape = "Fakultät")) +
geom_point(size = 2, stroke = 1,
aes(y = mean, x = variable, color = gender, shape = "Durchschnitt"), fill = "white") +
scale_x_discrete(name = "", expand = c(0.05,0.05)) +
scale_y_continuous(name = "Prozent (%)") +
scale_color_manual(values = c(weiblich = teal, andere = dark_blue),
name = "") +
scale_shape_manual(breaks=c('Durchschnitt', "Fakultät"),
values=c('Durchschnitt'=21, "Fakultät"=16),
name = "") +
theme(axis.text = element_text(),
axis.title.x = element_text(),
axis.line.x = element_line(color = "grey50"),
axis.ticks.x = element_line(color = "black")))
ggsave(paste0("reports/figures/P5.2A_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13, height = 2)
df_faculty_affected_waffle = df_faculty_all %>%
left_join(df_all_students_gender) %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty) %>%
summarize_at(c("Betroffene", "Teilnehmende", "Studierende"), ~ sum(.x, na.rm = TRUE), 0) %>%
mutate("Teilnehmende" = round(100*Teilnehmende/ Studierende, 0),
"Betroffene" = round(100*Betroffene/ Studierende, 0),
"Studierende" = 100 - Teilnehmende - Betroffene)
p2 = waffle(df_faculty_affected_waffle, rows = 4, colors = c(teal, dark_blue, soft_blue), legend_pos = "bottom") +
add_common_layout()
ggsave(paste0("reports/figures/P5.2B_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 11, height = 2)
(p = plot_grid(p1, p2, ncol = 1))
save_plot(paste0(p, "reports/figures/P5.2C_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700)
}
faculty_benchmark(faculty_code = i, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students)
(plot_grid(p1, p2, ncol = 1))
save_plot(paste0("reports/figures/P5.2C_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13)
#faculty comparison
faculty_benchmark = function(faculty_code, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students) {
df_all_students_gender = df_all_students %>%
rename(weiblich = total_female,
andere = total_other) %>%
melt(measure.vars = c("weiblich", "andere"), variable.name = "gender", value.name = "Studierende") %>%
select(-total)
df_faculty_affected = full_data %>%
select(Q2.2, Q2.1, main_question3) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
filter_at(vars(main_question3), any_vars (. == 1)) %>%
select(-Q2.2, -Q2.1) %>%
count(faculty, gender)
df = full_data %>%
select(Q2.2, Q2.1) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
count(faculty, gender) %>%
rename("Teilnehmende" = n) %>%
left_join(df_faculty_affected) %>%
rename("Betroffene" = n) %>%
filter(faculty != "keine Angabe") %>%
left_join(df_all_students_gender) %>%
mutate("Teilnehmende in % Studierende" = 100*Teilnehmende/ Studierende,
"Betroffene in % Teilnehmende" = 100*Betroffene/ Teilnehmende,
"Betroffene in % Studierende" = 100*Betroffene/ Studierende)
df_mean = df %>%
group_by(gender) %>%
summarize_at(c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende"), ~ mean(.x, na.rm = TRUE)) %>%
melt(id.vars = "gender", value.name = "mean")
df = df %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty)  %>%
select(gender, c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende")) %>%
melt(id.vars = "gender", value.name = "selected") %>%
left_join(df_mean) %>%
mutate(direction = (case_when(mean < selected ~ "überdurchschnittlich",
mean > selected ~ "unterdurchschnittlich",
mean == selected ~ "durchschnittlich")))
df$gender = factor(df$gender, levels = c("weiblich", "andere"))
df$variable = factor(df$variable, levels = c("Betroffene in % Studierende", "Betroffene in % Teilnehmende", "Teilnehmende in % Studierende"))
(p1 = ggplot(data = df) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_link(alpha = .5, color = soft_blue, show.legend = FALSE,
aes(x = variable, xend = variable, y = mean, yend = selected, colour = gender, size = after_stat(index))) +
geom_point(size = 6,
aes(y = selected, x = variable, color = gender, shape = "Fakultät")) +
geom_point(size = 2, stroke = 1,
aes(y = mean, x = variable, color = gender, shape = "Durchschnitt"), fill = "white") +
scale_x_discrete(name = "", expand = c(0.05,0.05)) +
scale_y_continuous(name = "Prozent (%)") +
scale_color_manual(values = c(weiblich = teal, andere = dark_blue),
name = "") +
scale_shape_manual(breaks=c('Durchschnitt', "Fakultät"),
values=c('Durchschnitt'=21, "Fakultät"=16),
name = "") +
theme(axis.text = element_text(),
axis.title.x = element_text(),
axis.line.x = element_line(color = "grey50"),
axis.ticks.x = element_line(color = "black"),
legend.box.margin = margin(0, .5, 0, 0, "cm")))
ggsave(paste0("reports/figures/P5.2A_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13, height = 2)
df_faculty_affected_waffle = df_faculty_all %>%
left_join(df_all_students_gender) %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty) %>%
summarize_at(c("Betroffene", "Teilnehmende", "Studierende"), ~ sum(.x, na.rm = TRUE), 0) %>%
mutate("Teilnehmende" = round(100*Teilnehmende/ Studierende, 0),
"Betroffene" = round(100*Betroffene/ Studierende, 0),
"Studierende" = 100 - Teilnehmende - Betroffene)
p2 = waffle(df_faculty_affected_waffle, rows = 4, colors = c(teal, dark_blue, soft_blue), legend_pos = "bottom") +
add_common_layout()
ggsave(paste0("reports/figures/P5.2B_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 11, height = 2)
(plot_grid(p1, p2, ncol = 1))
save_plot(paste0("reports/figures/P5.2C_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13)
}
faculty_benchmark(faculty_code = i, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students)
#faculty comparison
faculty_benchmark = function(faculty_code, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students) {
df_all_students_gender = df_all_students %>%
rename(weiblich = total_female,
andere = total_other) %>%
melt(measure.vars = c("weiblich", "andere"), variable.name = "gender", value.name = "Studierende") %>%
select(-total)
df_faculty_affected = full_data %>%
select(Q2.2, Q2.1, main_question3) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
filter_at(vars(main_question3), any_vars (. == 1)) %>%
select(-Q2.2, -Q2.1) %>%
count(faculty, gender)
df = full_data %>%
select(Q2.2, Q2.1) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
count(faculty, gender) %>%
rename("Teilnehmende" = n) %>%
left_join(df_faculty_affected) %>%
rename("Betroffene" = n) %>%
filter(faculty != "keine Angabe") %>%
left_join(df_all_students_gender) %>%
mutate("Teilnehmende in % Studierende" = 100*Teilnehmende/ Studierende,
"Betroffene in % Teilnehmende" = 100*Betroffene/ Teilnehmende,
"Betroffene in % Studierende" = 100*Betroffene/ Studierende)
df_mean = df %>%
group_by(gender) %>%
summarize_at(c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende"), ~ mean(.x, na.rm = TRUE)) %>%
melt(id.vars = "gender", value.name = "mean")
df = df %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty)  %>%
select(gender, c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende")) %>%
melt(id.vars = "gender", value.name = "selected") %>%
left_join(df_mean) %>%
mutate(direction = (case_when(mean < selected ~ "überdurchschnittlich",
mean > selected ~ "unterdurchschnittlich",
mean == selected ~ "durchschnittlich")))
df$gender = factor(df$gender, levels = c("weiblich", "andere"))
df$variable = factor(df$variable, levels = c("Betroffene in % Studierende", "Betroffene in % Teilnehmende", "Teilnehmende in % Studierende"))
(p1 = ggplot(data = df) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_link(alpha = .5, color = soft_blue, show.legend = FALSE,
aes(x = variable, xend = variable, y = mean, yend = selected, colour = gender, size = after_stat(index))) +
geom_point(size = 6,
aes(y = selected, x = variable, color = gender, shape = "Fakultät")) +
geom_point(size = 2, stroke = 1,
aes(y = mean, x = variable, color = gender, shape = "Durchschnitt"), fill = "white") +
scale_x_discrete(name = "", expand = c(0.05,0.05)) +
scale_y_continuous(name = "Prozent (%)") +
scale_color_manual(values = c(weiblich = teal, andere = dark_blue),
name = "") +
scale_shape_manual(breaks=c('Durchschnitt', "Fakultät"),
values=c('Durchschnitt'=21, "Fakultät"=16),
name = "") +
theme(axis.text = element_text(),
axis.title.x = element_text(),
axis.line.x = element_line(color = "grey50"),
axis.ticks.x = element_line(color = "black"),
legend.box.margin = margin(0, .5, 0, 0, "cm")))
ggsave(paste0("reports/figures/P5.2A_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13, height = 2)
df_faculty_affected_waffle = df_faculty_all %>%
left_join(df_all_students_gender) %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty) %>%
summarize_at(c("Betroffene", "Teilnehmende", "Studierende"), ~ sum(.x, na.rm = TRUE), 0) %>%
mutate("Teilnehmende" = round(100*Teilnehmende/ Studierende, 0),
"Betroffene" = round(100*Betroffene/ Studierende, 0),
"Studierende" = 100 - Teilnehmende - Betroffene)
p2 = waffle(df_faculty_affected_waffle, rows = 4, colors = c(teal, dark_blue, soft_blue), legend_pos = "bottom") +
add_common_layout()
ggsave(paste0("reports/figures/P5.2B_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 11, height = 2)
(plot_grid(p1, p2, ncol = 1))
ggsave(paste0("reports/figures/P5.2C_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13)
}
faculty_benchmark(faculty_code = i, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students)
#faculty comparison
faculty_benchmark = function(faculty_code, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students) {
df_all_students_gender = df_all_students %>%
rename(weiblich = total_female,
andere = total_other) %>%
melt(measure.vars = c("weiblich", "andere"), variable.name = "gender", value.name = "Studierende") %>%
select(-total)
df_faculty_affected = full_data %>%
select(Q2.2, Q2.1, main_question3) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
filter_at(vars(main_question3), any_vars (. == 1)) %>%
select(-Q2.2, -Q2.1) %>%
count(faculty, gender)
df = full_data %>%
select(Q2.2, Q2.1) %>%
filter(!is.na(Q2.2),
!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)],
gender = replace(gender, gender %in% c("männlich", "keine Angabe"), "andere")) %>%
count(faculty, gender) %>%
rename("Teilnehmende" = n) %>%
left_join(df_faculty_affected) %>%
rename("Betroffene" = n) %>%
filter(faculty != "keine Angabe") %>%
left_join(df_all_students_gender) %>%
mutate("Teilnehmende in % Studierende" = 100*Teilnehmende/ Studierende,
"Betroffene in % Teilnehmende" = 100*Betroffene/ Teilnehmende,
"Betroffene in % Studierende" = 100*Betroffene/ Studierende)
df_mean = df %>%
group_by(gender) %>%
summarize_at(c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende"), ~ mean(.x, na.rm = TRUE)) %>%
melt(id.vars = "gender", value.name = "mean")
df = df %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty)  %>%
select(gender, c("Teilnehmende in % Studierende", "Betroffene in % Teilnehmende", "Betroffene in % Studierende")) %>%
melt(id.vars = "gender", value.name = "selected") %>%
left_join(df_mean) %>%
mutate(direction = (case_when(mean < selected ~ "überdurchschnittlich",
mean > selected ~ "unterdurchschnittlich",
mean == selected ~ "durchschnittlich")))
df$gender = factor(df$gender, levels = c("weiblich", "andere"))
df$variable = factor(df$variable, levels = c("Betroffene in % Studierende", "Betroffene in % Teilnehmende", "Teilnehmende in % Studierende"))
(p1 = ggplot(data = df) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_link(alpha = .5, color = soft_blue, show.legend = FALSE,
aes(x = variable, xend = variable, y = mean, yend = selected, colour = gender, size = after_stat(index))) +
geom_point(size = 6,
aes(y = selected, x = variable, color = gender, shape = "Fakultät")) +
geom_point(size = 2, stroke = 1,
aes(y = mean, x = variable, color = gender, shape = "Durchschnitt"), fill = "white") +
scale_x_discrete(name = "", expand = c(0.05,0.05)) +
scale_y_continuous(name = "Prozent (%)") +
scale_color_manual(values = c(weiblich = teal, andere = dark_blue),
name = "") +
scale_shape_manual(breaks=c('Durchschnitt', "Fakultät"),
values=c('Durchschnitt'=21, "Fakultät"=16),
name = "") +
theme(axis.text = element_text(),
axis.title.x = element_text(),
axis.line.x = element_line(color = "grey50"),
axis.ticks.x = element_line(color = "black"),
legend.box.margin = margin(0, .5, 0, 0, "cm")))
ggsave(paste0("reports/figures/P5.2A_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13, height = 2)
df_faculty_affected_waffle = df_faculty_all %>%
left_join(df_all_students_gender) %>%
filter(faculty == codes_faculty[codes_faculty$code == faculty_code, ]$faculty) %>%
summarize_at(c("Betroffene", "Teilnehmende", "Studierende"), ~ sum(.x, na.rm = TRUE), 0) %>%
mutate("Teilnehmende" = round(100*Teilnehmende/ Studierende, 0),
"Betroffene" = round(100*Betroffene/ Studierende, 0),
"Studierende" = 100 - Teilnehmende - Betroffene)
p2 = waffle(df_faculty_affected_waffle, rows = 4, colors = c(teal, dark_blue, soft_blue), legend_pos = "bottom") +
add_common_layout() +
theme(legend.box.margin = margin(0, .5, 0, 0, "cm"))
ggsave(paste0("reports/figures/P5.2B_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 11, height = 2)
(plot_grid(p1, p2, ncol = 1))
ggsave(paste0("reports/figures/P5.2C_", codes_faculty[codes_faculty$code == faculty_code, ]$faculty, ".png"), dpi = 700, width = 13)
}
faculty_benchmark(faculty_code = i, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students)
for (i in c(1:6)) {
faculty_benchmark(faculty_code = i, full_data, main_question_q3, codes_faculty, codes_gender, df_all_students)
}
setwd("~/03_Outreach/dataviz/konstanz")
source("code/utils.R")
source("code/utils.R")
df = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
names(df_scale) = c(main_question3, "gender")
names(df) = c(main_question3, "gender")
df = df %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender) %>%
summarize(mean = mean(value, na.rm = FALSE),
sd = sd(value, na.rm = FALSE)) %>%
filter(gender %in% c("männlich", "weiblich"),
!is.na(variable),
!is.na(mean))
ggplot(data = df, aes(x = variable, y = mean, color = gender)) + theme_void() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
coord_flip() +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70), expand = c(0.05,0.05)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70), expand = c(0.05,0.05)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70), expand = c(0.05,0.05)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(width = 70, expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "))) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "))) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 50)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 50)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 10)
ggsave("reports/figures/P6.png", dpi = 700, width = 10, height = 7)
ggsave("reports/figures/P6.png", dpi = 700, width = 10, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 60)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 10, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout() +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 12, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout(12) +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd)) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 12, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout(12) +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd), size = 2) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 12, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout(12) +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd), size = 1) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout(12) +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd), size = 1) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 12, height = 9)
ggplot(data = df, aes(x = variable, y = mean, color = gender)) +
theme_void() +
add_common_layout(13) +
coord_flip() +
geom_pointrange(aes(ymin = mean-sd, ymax = mean +sd), size = 1) +
scale_color_manual(values = values_gender,
name = "") +
scale_y_continuous(name = "Wie unangenehm wurde Erlebnis empfunden?") +
scale_x_discrete(expand = c(0.05,0.05), name = "",
labels =str_wrap(str_replace_all(long_names, "foo" , " "), width = 70)) + #induce line break
theme(axis.line.x = element_line(),
axis.text = element_text())
ggsave("reports/figures/P6.png", dpi = 700, width = 12, height = 9)
