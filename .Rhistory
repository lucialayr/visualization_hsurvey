!is.na(Q2.1)) %>%
mutate(faculty = codes_faculty$faculty[match(Q2.2, codes_faculty$code)],
gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
count(faculty, gender) %>%
rename(n_all = n) %>%
left_join(df_faculty_affected) %>%
mutate(share = n/n_all) %>%
filter(gender %in% c("männlich", "weiblich"),
faculty != "keine Angabe")
p2 = ggplot() + theme_void() +
geom_bar(data = df_faculty_all, aes(x = faculty, y = share, fill = gender), stat = "identity", position = "dodge") +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
scale_y_continuous(breaks = c(0, 0.25, 0.5), labels = c("0 %", "25 %", "50 %"), name = "Prozent der Befragten") +
theme(axis.text = element_text(hjust = 1),
axis.title.x = element_text())
(p = plot_grid(p1, p2, nrow = 2))
ggsave("reports/figures/vergleich_fakultäten.png", dpi = 700)
scale_q3 = c("Q3.4", "Q3.8", "Q3.12", "Q3.16", "Q3.20", "Q3.24", "Q3.28", "Q3.32",
"Q3.36", "Q3.40", "Q3.44", "Q3.48", "Q3.52", "Q3.56", "Q3.60")
df_scale = full_data %>%
select(Q2.1, main_question_q3, scale_q3)
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3, scale_q3))
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3))
head(df_scale)
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3)) %>%
filter_at(vars(main_question_q3), any_vars (. == 1))
View(df_scale)
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3)) %>%
filter_at(vars(main_question_q3), any_vars (. == 1)) %>%
mutate(gender = codes_gender$gender[match(value, codes_gender$code)]) %>%
select(-Q2.1)
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3)) %>%
filter_at(vars(main_question_q3), any_vars (. == 1)) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
View(df_scale)
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3)) %>%
filter_at(vars(main_question_q3), any_vars (. == 1)) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1, all_of(main_question_q3))
df_scale = full_data %>%
select(Q2.1, all_of(main_question_q3), all_of(scale_q3)) %>%
filter_at(vars(main_question_q3), any_vars (. == 1)) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1, all_of(-main_question_q3))
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3))
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (. != NA)) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (. !is.na())) %>%
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.x))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na())) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
View(df_scale)
df_scale$names = c(main_question_q3, "gender")
names(df_scale)
names(df_scale) = c(main_question_q3, "gender")
install.packages("ggdist")
library(ggdist)
?stat_gradientinterval
df_scale = df_scale %>%
melt(id.vars = "gender")
ggplot() +
geom_slabinterval(data = df_scale, aes(x = variable, y = value, fill = gender))
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, fill = gender))
ggplot() +
geom_point(data = df_scale, aes(x = variable, y = value, fill = gender))
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender))
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_gradientinterval()
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_gradientinterval(position = "dodge", fill_type = "gradient")
df = tribble(
~group, ~subgroup, ~value,
"a",          "h", rnorm(1000, mean = 5),
"b",          "h", rnorm(1000, mean = 7, sd = 1.5),
"c",          "h", rnorm(1000, mean = 8),
"c",          "i", rnorm(1000, mean = 9),
"c",          "j", rnorm(1000, mean = 7)
) %>%
unnest(value)
df
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
) +
expand_limits(y = 0) +
# plus coord_cartesian so there is no space between bars and axis
coord_cartesian(expand = FALSE)
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
) +
expand_limits(y = 0)
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
)
ggplot() +
#geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
)
ggplot(data = df, aes(x = group, y = value, fill = subgroup)) +
stat_gradientinterval(position = "dodge", fill_type = "gradient") +
labs(title = "stat_gradientinterval(position = 'dodge', fill_type = 'gradient')")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value))
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value))
ggplot() +
#geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
)
ggplot(data = df, aes(x = group, y = value, fill = subgroup)) +
stat_gradientinterval(position = "dodge", fill_type = "gradient") +
labs(title = "stat_gradientinterval(position = 'dodge', fill_type = 'gradient')")
head(df)
head(df_scale)
class(df_scale$value)
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value)) %>%
mutate(value = as.numeric(value))
class(df_scale$value)
ggplot() +
#geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
stat_ccdfinterval(aes(slab_alpha = after_stat(f)),
thickness = 1, position = "dodge", fill_type = "gradient"
)
ggplot(data = df, aes(x = group, y = value, fill = subgroup)) +
stat_gradientinterval(position = "dodge", fill_type = "gradient") +
labs(title = "stat_gradientinterval(position = 'dodge', fill_type = 'gradient')")
head(df)
head(df_scale)
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
stat_gradientinterval(position = "dodge", fill_type = "gradient") +
labs(title = "stat_gradientinterval(position = 'dodge', fill_type = 'gradient')")
library(ggridges)
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
ggridges(position = "dodge", fill_type = "gradient")
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
geom_ridgeline(position = "dodge", fill_type = "gradient")
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
geom_ridgeline()
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
geom_ridgeline(height = 1)
?geom_ridgeline
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
geom_ridgeline(aes(height = 1))
ggplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
geom_ridgeline(aes(height = 1)) +
coord_flip()
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_ridgeline(aes(height = 1))
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_ridgeline(aes(height = .1))
ggplot(data = df_scale, aes(x = value, y = variable)) +
geom_ridgeline(aes(height = .1))
ggplot(data = df_scale, aes(x = value, y = variable)) +
geom_ridgeline(aes(height = height))
ggplot(data = df_scale, aes(x = value, y = variable)) +
geom_density_ridges(aes(height = height))
ggplot(data = df_scale, aes(x = value, y = variable)) +
geom_density_ridges()
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_density_ridges()
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender), alpha = .5) +
geom_density_ridges()
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_density_ridges(alpha = .5)
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_density_ridges(alpha = .5, scale = 1)
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_density_ridges(alpha = .5, scale = 1)
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_density_ridges(alpha = .5, scale = 1) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, color = gender)) + theme_void() +
geom_density_ridges(alpha = .5, scale = 1) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, color = gender, fill = gender)) + theme_void() +
geom_density_ridges(alpha = .5, scale = 1) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_density_ridges(alpha = .5, scale = 1) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_intervall() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
??geom_interval
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_interval() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_interval(xmin = 1, xmax = 5) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_interval(xmin = 1, xmax = 5)
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value))
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) + theme_void() +
geom_interval(xmin = 1, xmax = 5) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = value, y = variable, fill = gender)) +
geom_interval(xmin = 1, xmax = 5) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value))
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender) %>%
summarize(mean = mean(value),
sd = sd(value))
ggplot(data = df_scale, aes(x = mean, y = variable, fill = gender)) +
geom_interval(xmin = -sd, xmax = sd) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = mean, y = variable, fill = gender)) +
geom_interval(aes(xmin = -sd, xmax = sd)) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = mean, y = variable, color = gender)) +
geom_interval(aes(xmin = -sd, xmax = sd)) +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot(data = df_scale, aes(x = mean, y = variable, color = gender)) +
geom_interval(aes(xmin = -sd, xmax = sd)) +
scale_color_brewer()
ggplot(data = df_scale, aes(x = mean, y = variable, color = gender)) +
geom_interval(aes(xmin = -sd, xmax = sd), position = "dodge") +
scale_color_brewer()
ggplot(data = df_scale) +
geom_interval(aes(x = mean, y = variable, color = gender, xmin = -sd, xmax = sd), position = "dodge") +
scale_color_brewer()
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender)
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender), position = "dodge")
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender), position = "dodge")
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender))
ggplot() +
geom_jitter(data = df_scale, aes(x = variable, y = value, color = gender)) +
coord_flip()
ggplot() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, color = gender)) +
coord_flip()
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender) %>%
gender %in% c("männlich", "weiblich")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender) %>%
filter(gender %in% c("männlich", "weiblich"))
ggplot() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, color = gender)) +
coord_flip()
?geom_boxplot
ggplot() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender)) +
coord_flip()
ggplot() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7) +
coord_flip()
ggplot() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot() + theme_bw() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot() + theme_void() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot() + theme_void() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7, outlier.shape = NA) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "")
ggplot() + theme_void() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7, outlier.shape = NA) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line())
ggplot() + theme_void() +
geom_boxplot(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7, outlier.shape = NA) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot() + theme_void() +
geom_pointrange(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7, outlier.shape = NA) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot() + theme_void() +
geom_pointrange(data = df_scale, aes(x = variable, y = value, fill = gender), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot() + theme_void() +
geom_pointrange(data = df_scale, aes(x = variable, y = value, color = gender), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
df_scale = full_data %>%
select(Q2.1,  all_of(scale_q3)) %>%
filter_at(vars(scale_q3), any_vars (!is.na(.))) %>%
mutate(gender = codes_gender$gender[match(Q2.1, codes_gender$code)]) %>%
select(-Q2.1)
names(df_scale) = c(main_question_q3, "gender")
df_scale = df_scale %>%
melt(id.vars = "gender") %>%
filter(!is.na(value),
!is.na(gender)) %>%
mutate(value = as.numeric(value)) %>%
group_by(variable, gender) %>%
summarize(mean = mean(value),
sd = sd(value)) %>%
filter(gender %in% c("männlich", "weiblich"))
ggplot() + theme_void() +
geom_pointrange(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd), alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange(alpha = .7) +
coord_flip() +
scale_fill_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange(alpha = .7) +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange() +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange(position = "dodge") +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange(position_dodge(widht = .5)) +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender, ymin = -sd, ymax = sd)) + theme_void() +
geom_pointrange(position_dodge(width = .5)) +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender)) + theme_void() +
geom_pointrange(aes(ymin = -sd, ymax = sd), position_dodge(width = .5)) +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
ggplot(data = df_scale, aes(x = variable, y = mean, color = gender)) + theme_void() +
geom_pointrange(aes(ymin = -sd, ymax = sd)) +
coord_flip() +
scale_color_manual(values = c("weiblich" = dark_blue, "männlich" = soft_blue, "divers" = teal, "keine Angabe" = "grey50"),
name = "") +
theme(axis.line.x = element_line(),
axis.text = element_text())
